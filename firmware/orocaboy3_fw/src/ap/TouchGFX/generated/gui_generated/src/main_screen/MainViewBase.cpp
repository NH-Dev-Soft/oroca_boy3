/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase()
{
    box_bg.setPosition(0, 0, 320, 240);
    box_bg.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    image_speaker.setXY(7, 2);
    image_speaker.setBitmap(touchgfx::Bitmap(BITMAP_A4_ID));

    textArea_title.setXY(124, 5);
    textArea_title.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 8, 245));
    textArea_title.setLinespacing(0);
    textArea_title.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));

    animatedImage_title.setXY(96, 5);
    animatedImage_title.setBitmaps(BITMAP_OROCABOY1_ID, BITMAP_OROCABOY4_ID);
    animatedImage_title.setUpdateTicksInterval(6);
    animatedImage_title.startAnimation(false, true, true);

    swipeContainer_emulator.setXY(0, 37);

    page_nes.setWidth(320);
    page_nes.setHeight(150);

    image_nes.setXY(60, 41);
    image_nes.setBitmap(touchgfx::Bitmap(BITMAP_A1_ID));
    page_nes.add(image_nes);
    swipeContainer_emulator.add(page_nes);

    page_msx.setWidth(320);
    page_msx.setHeight(150);

    image_msx.setXY(60, 44);
    image_msx.setBitmap(touchgfx::Bitmap(BITMAP_FMSX_ID));
    page_msx.add(image_msx);
    swipeContainer_emulator.add(page_msx);

    page_doom.setWidth(320);
    page_doom.setHeight(150);

    image_doom.setXY(60, 39);
    image_doom.setBitmap(touchgfx::Bitmap(BITMAP_DOOM_ID));
    page_doom.add(image_doom);
    swipeContainer_emulator.add(page_doom);

    page_button.setWidth(320);
    page_button.setHeight(150);

    test_menu.setXY(111, 77);
    test_menu.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    test_menu.setLinespacing(0);
    test_menu.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3));
    page_button.add(test_menu);
    swipeContainer_emulator.add(page_button);

    swipeContainer_emulator.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_DARK_PAGEINDICATOR_DOT_INDICATOR_SMALL_NORMAL_ID), touchgfx::Bitmap(BITMAP_DARK_PAGEINDICATOR_DOT_INDICATOR_SMALL_HIGHLIGHT_ID));
    swipeContainer_emulator.setPageIndicatorXY(130, 0);
    swipeContainer_emulator.setSwipeCutoff(50);
    swipeContainer_emulator.setEndSwipeElasticWidth(50);
    swipeContainer_emulator.setSelectedPage(0);

    button_load.setXY(75, 263);
    button_load.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    button_load.setLabelText(touchgfx::TypedText(T_SINGLEUSEID4));
    button_load.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    button_load.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    image_drive.setBitmap(touchgfx::Bitmap(BITMAP_USB_DRIVE_ID));
    image_drive.setPosition(242, 3, 23, 20);
    image_drive.setScalingAlgorithm(touchgfx::ScalableImage::BILINEAR_INTERPOLATION);

    image_bat3.setXY(279, 2);
    image_bat3.setBitmap(touchgfx::Bitmap(BITMAP_BAT3_ID));

    image_bat4.setXY(279, 2);
    image_bat4.setBitmap(touchgfx::Bitmap(BITMAP_BAT4_ID));

    image_bat2.setXY(279, 2);
    image_bat2.setBitmap(touchgfx::Bitmap(BITMAP_BAT2_ID));

    image_bat1.setXY(279, 2);
    image_bat1.setBitmap(touchgfx::Bitmap(BITMAP_A2_ID));

    image_bat.setBitmap(touchgfx::Bitmap(BITMAP_B1_ID));
    image_bat.setPosition(287, 3, 18, 22);
    image_bat.setScalingAlgorithm(touchgfx::ScalableImage::BILINEAR_INTERPOLATION);

    image_sd.setXY(261, 3);
    image_sd.setBitmap(touchgfx::Bitmap(BITMAP_SD_CARD_ID));

    add(box_bg);
    add(image_speaker);
    add(textArea_title);
    add(animatedImage_title);
    add(swipeContainer_emulator);
    add(button_load);
    add(image_drive);
    add(image_bat3);
    add(image_bat4);
    add(image_bat2);
    add(image_bat1);
    add(image_bat);
    add(image_sd);
}

void MainViewBase::setupScreen()
{

}

//Handles when a key is pressed
void MainViewBase::handleKeyEvent(uint8_t key)
{
    if(0 == key)
    {
        //goLeft_pc
        //When hardware button 0 clicked call virtual function
        //Call goLeft_pc
        goLeft_pc();

        //goRight_pc
        //When hardware button 0 clicked call virtual function
        //Call goRight_pc
        goRight_pc();

        //show_empty
        //When hardware button 0 clicked change screen to msg_box
        //Go to msg_box with no screen transition
        application().gotomsg_boxScreenNoTransition();

        //go_home
        //When hardware button 0 clicked change screen to btn_show
        //Go to btn_show with no screen transition
        application().gotobtn_showScreenNoTransition();

        //go_btn_test
        //When hardware button 0 clicked change screen to btn_show
        //Go to btn_show with no screen transition
        application().gotobtn_showScreenNoTransition();
    }
}
