/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINVIEWBASE_HPP
#define MAINVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/AnimatedImage.hpp>
#include <touchgfx/containers/SwipeContainer.hpp>
#include <touchgfx/containers/Container.hpp>

#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase() {}
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

    /*
     * Virtual Action Handlers
     */
    virtual void goLeft_pc()
    {
        // Override and implement this function in Main
    }

    virtual void goRight_pc()
    {
        // Override and implement this function in Main
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box box_bg;
    touchgfx::Image image_speaker;
    touchgfx::TextArea textArea_title;
    touchgfx::AnimatedImage animatedImage_title;
    touchgfx::SwipeContainer swipeContainer_emulator;
    touchgfx::Container page_nes;
    touchgfx::Image image_nes;

    touchgfx::Container page_msx;
    touchgfx::Image image_msx;

    touchgfx::Container page_doom;
    touchgfx::Image image_doom;

    touchgfx::Container page_button;
    touchgfx::TextArea test_menu;

    touchgfx::Container page_user1;
    touchgfx::TextAreaWithOneWildcard textArea_slot_title;

    touchgfx::Container page_user2;
    touchgfx::TextAreaWithOneWildcard textArea_slot_title_1;

    touchgfx::ButtonWithLabel button_load;
    touchgfx::Image image_bat3;
    touchgfx::Image image_bat4;
    touchgfx::Image image_bat2;
    touchgfx::Image image_bat1;
    touchgfx::ScalableImage image_bat;
    touchgfx::Image image_sd;
    touchgfx::TextAreaWithOneWildcard textArea_volume;
    touchgfx::Image image_drive;
    touchgfx::TextAreaWithOneWildcard textArea_slot;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_SLOT_TITLE_SIZE = 48;
    touchgfx::Unicode::UnicodeChar textArea_slot_titleBuffer[TEXTAREA_SLOT_TITLE_SIZE];
    static const uint16_t TEXTAREA_SLOT_TITLE_1_SIZE = 48;
    touchgfx::Unicode::UnicodeChar textArea_slot_title_1Buffer[TEXTAREA_SLOT_TITLE_1_SIZE];
    static const uint16_t TEXTAREA_VOLUME_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_volumeBuffer[TEXTAREA_VOLUME_SIZE];
    static const uint16_t TEXTAREA_SLOT_SIZE = 48;
    touchgfx::Unicode::UnicodeChar textArea_slotBuffer[TEXTAREA_SLOT_SIZE];

private:

};

#endif // MAINVIEWBASE_HPP
